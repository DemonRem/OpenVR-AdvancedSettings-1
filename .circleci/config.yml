version: 2.0

jobs:
    build:
        branches:
            ignore:
                - /docs-*/
                - /do-not-run-ci-*/
                - /only-appveyor-ci-*/
                - /only-travis-ci-*/
        environment:
            QMAKE_SPEC: linux-g++
            QT_SELECT: opt-qt512
            MAKE_JOBS: 2
        docker:
            - image: username223/ovras-appimage-build
        steps:
            - checkout
            - run:
                name: Give build scripts +x
                command: |
                    chmod +x ./build_scripts/linux/build_linux.sh
                    chmod +x ./build_scripts/linux/format.sh
                    chmod +x ./build_scripts/linux/run-clang-tidy.sh
                    chmod +x ./build_scripts/linux/verify_formatting.sh
            - run:
                name: Run clang-format
                command: python ./build_scripts/run-clang-format.py ./src -r --color always --clang-format-executable clang-format-8
            - run:
                name: Update version number
                command: |
                    python ./build_scripts/append_to_version_file.py $(git rev-parse HEAD | cut -c -8)
                    cat ./build_scripts/compile_version_string.txt
            - run:
                name: Run build script
                command: ./build_scripts/linux/build_linux.sh
            - run:
                name: Get qtdeploylinux
                command: |
                    wget -c -nv https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
                    chmod a+x ./linuxdeployqt-continuous-x86_64.AppImage
            - run:
                name: Create AppImage
                command: ./build_scripts/linux/appimage.sh
            - run:
                name: Copy Artifacts
                command: |
                    mkdir artifacts
                    cp -v ./OpenVR_Advanced_Settings-*.AppImage ./artifacts/
            - store_artifacts:
                path: ./artifacts/

